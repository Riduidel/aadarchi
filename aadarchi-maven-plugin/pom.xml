<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<parent>
		<artifactId>system</artifactId>
		<groupId>io.github.Riduidel.aadarchi</groupId>
		<version>0.1.2-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>

	<artifactId>aadarchi-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<name>Aadarchi : Maven plugin</name>
	<description>This maven plugin allows integration of our documentation system into maven builds by providing a set of useful mojos</description>
	
	<properties>
		<!-- See latest version here: https://mvnrepository.com/artifact/org.asciidoctor/asciidoctorj-diagram -->
		<version.asciidoctor.kroki>0.5.0</version.asciidoctor.kroki>
		<!-- See latest version here https://mvnrepository.com/artifact/org.jruby/jruby -->
		<version.jruby>9.2.9.0</version.jruby>
	</properties>

	<!-- We need the rubygems releases to use Kroki and asciidoc-revealjs
	See https://github.com/Riduidel/aadarchi/issues/159 for the weird protocol -->
	<repositories>
		<repository>
			<id>mavengems</id>
			<url>mavengem:https://rubygems.org</url>
		</repository>
	</repositories>

	<dependencies>
		<!-- used to invoke asciidoctor-maven-plugin in a controlled way -->
		<dependency>
			<groupId>org.twdata.maven</groupId>
			<artifactId>mojo-executor</artifactId>
			<version>2.4.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>3.6.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>3.8.5</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>cdi-in-maven-plugin-helper</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>base</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.alchim31</groupId>
			<artifactId>livereload-jvm</artifactId>
			<version>0.2.0</version>
		</dependency>
		<!-- asciidoctor-kroki is added as POM dependency to make sure gem maven 
			plugin downloads it -->
		<dependency>
			<groupId>rubygems</groupId>
			<artifactId>asciidoctor-kroki</artifactId>
			<version>${version.asciidoctor.kroki}</version>
			<type>gem</type>
			<!-- Avoid downloading gems included in AsciidoctorJ -->
			<exclusions>
				<exclusion>
					<groupId>rubygems</groupId>
					<artifactId>asciidoctor</artifactId>
				</exclusion>
				<exclusion>
					<groupId>rubygems</groupId>
					<artifactId>thread_safe</artifactId>
				</exclusion>
				<exclusion>
					<groupId>rubygems</groupId>
					<artifactId>concurrent-ruby</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<!-- this allows us to download gems -->
				<groupId>org.torquebox.mojo</groupId>
				<artifactId>mavengem-wagon</artifactId>
				<version>1.0.3</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>de.saumya.mojo</groupId>
				<artifactId>gem-maven-plugin</artifactId>
				<version>2.0.1</version>
				<configuration>
					<jrubyVersion>${version.jruby}</jrubyVersion>
					<gemHome>${project.build.directory}/gems</gemHome>
					<gemPath>${project.build.directory}/gems</gemPath>
				</configuration>
				<executions>
					<!-- Install required gems in target directory -->
					<execution>
						<id>install-gems</id>
						<goals>
							<goal>initialize</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>integration-tests</id>
			<activation>
				<property>
					<name>!skip_integration</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-invoker-plugin</artifactId>
						<version>1.10</version>
						<configuration>
							<debug>true</debug>
							<scriptVariables>
								<pluginVersion>${project.version}</pluginVersion>
							</scriptVariables>
							<projectsDirectory>src/it</projectsDirectory>
							<pomIncludes>
								<pomInclude>**/pom.xml</pomInclude>
							</pomIncludes>
							<!-- Without this configuration, projects are run directly from src, which means no interpolation is done -->
							<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
							<!-- Local repository used for tests -->
							<localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
							<!-- The settings file will fasten build download according to https://maven.apache.org/plugins/maven-invoker-plugin/examples/fast-use.html -->
							<settingsFile>src/it/settings.xml</settingsFile>
							<postBuildHookScript>verify.groovy</postBuildHookScript>
						</configuration>
						<executions>
							<execution>
								<goals>
									<!-- Invoking install prior to running tests will make sure this artifact is correctly copied
                            (see https://maven.apache.org/plugins/maven-invoker-plugin/examples/install-artifacts.html) -->
									<goal>install</goal>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>
</project>