<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>system</artifactId>
		<groupId>io.github.Riduidel.aadarchi</groupId>
		<version>0.1.3</version>
	</parent>
	<artifactId>architecture-documentation</artifactId>
	<name>Aadarchi : System documentation generator</name>
	<description>Using Aadarchi to document agile archiecture documentation system</description>
	<properties>
		<version.java>11</version.java>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<asciidoctor.highlighter>highlightjs</asciidoctor.highlighter>
		<aadarchi.main.class>org.ndx.aadarchi.base.ArchitectureDocumentationBuilder</aadarchi.main.class>

	</properties>

	<issueManagement>
		<url>https://github.com/Riduidel/aadarchi/issues</url>
	</issueManagement>

	<dependencies>
		<dependency>
			<groupId>io.github.Riduidel.aadarchi</groupId>
			<artifactId>base</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.Riduidel.aadarchi</groupId>
			<artifactId>structurizr-components-detector</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.Riduidel.aadarchi</groupId>
			<artifactId>github-scm-handler</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.Riduidel.aadarchi</groupId>
			<artifactId>adr-tickets-extractor</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jboss.weld/weld-junit-parent -->
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-junit-parent</artifactId>
			<type>pom</type>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<release>${maven.compiler.release}</release>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<localCheckout>true</localCheckout>
						<arguments>-Dasciidoc.documents.hide.bug.report=true</arguments>
						<releaseProfiles>settings-aadarchi,release</releaseProfiles>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>${project.groupId}</groupId>
				<artifactId>aadarchi-maven-plugin</artifactId>
				<version>${project.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>generate-model</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.6</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${version.java}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>${version.java}</release>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>generate-docs</id>
			<activation>
				<file>
					<exists>src/docs/asciidoc</exists>
				</file>
			</activation>
			<properties>
				<asciidoc.target.docs.directory>${project.build.directory}/asciidoc/docs</asciidoc.target.docs.directory>
			</properties>

			<build>
				<defaultGoal>package</defaultGoal>
				<plugins>
					<plugin>
						<groupId>${project.groupId}</groupId>
						<artifactId>aadarchi-maven-plugin</artifactId>
						<version>${project.version}</version>
						<executions>
							<execution>
								<id>generate-html-doc</id>
								<phase>package</phase>
								<goals>
									<goal>generate-html-docs</goal>
								</goals>
							</execution>
							<execution>
								<id>generate-pdf-doc</id>
								<phase>package</phase>
								<goals>
									<goal>generate-pdf-docs</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>${project.build.directory}/asciidoc/docs/pdf/index.pdf</file>
											<type>pdf</type>
											<classifier>documentation</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- TODO: Uncomment that if you want architecture documents to be pushed 
						to GitHub releases -->
					<!-- <plugin> <groupId>de.jutzig</groupId> <artifactId>github-release-plugin</artifactId> 
						<version>1.4.0</version> <executions> <execution> <id>deploy-pdf</id> <phase>deploy</phase> 
						<goals> <goal>release</goal> </goals> <configuration> <description>New version 
						of ${project.artifactId}</description> <releaseName>${project.version}</releaseName> 
						<tag>${project.artifactId}-${project.version}</tag> <fileSets> <fileSet> 
						<directory>${asciidoc.target.docs.directory}</directory> <includes> <include>pdf/index.pdf</include> 
						</includes> </fileSet> </fileSets> </configuration> </execution> </executions> 
						</plugin> -->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate-slides</id>
			<activation>
				<file>
					<exists>src/slides/asciidoc</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>${project.groupId}</groupId>
						<artifactId>aadarchi-maven-plugin</artifactId>
						<version>${project.version}</version>
						<executions>
							<execution>
								<id>generate-html-slides</id>
								<phase>package</phase>
								<goals>
									<goal>generate-html-slides</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- This profile should be invoked at the process-resources phase to 
				correctly trigger the remaining ones ! -->
			<id>livereload</id>
			<build>
				<defaultGoal>package</defaultGoal>
				<plugins>
					<plugin>
						<groupId>${project.groupId}</groupId>
						<artifactId>aadarchi-maven-plugin</artifactId>
						<version>${project.version}</version>
						<executions>
							<execution>
								<id>generate-html-slides</id>
								<phase>package</phase>
								<goals>
									<goal>livereload</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>