<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>system</artifactId>
		<groupId>io.github.Riduidel.agile-architecture-documentation-system</groupId>
		<version>0.0.12-SNAPSHOT</version>
	</parent>
	<artifactId>architecture-documentation</artifactId>
	<name>Agile Architecture Documentation System : System documentation generator</name>
	<description>Using agile architecture documentation system to document agile archiecture documentation system</description>
	<properties>
		<kroki.server.url>https://kroki.io</kroki.server.url>
		<version.java>11</version.java>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<asciidoctor.highlighter>highlightjs</asciidoctor.highlighter>
		<asciidoc.source.docs.directory>src/docs/asciidoc</asciidoc.source.docs.directory>
		<asciidoc.source.slides.directory>src/slides/asciidoc</asciidoc.source.slides.directory>
		<asciidoc.target.base.directory>${project.build.directory}/asciidoc</asciidoc.target.base.directory>
		<asciidoc.target.docs.directory>${asciidoc.target.base.directory}/docs</asciidoc.target.docs.directory>
		<asciidoc.target.slides.directory>${asciidoc.target.base.directory}/slides</asciidoc.target.slides.directory>
		<agile.architecture.main.class>org.ndx.agile.architecture.base.ArchitectureDocumentationBuilder</agile.architecture.main.class>
		<agile.architecture.output.dir>${project.build.directory}/structurizr</agile.architecture.output.dir>
		<agile.architecture.output.diagrams>${agile.architecture.output.dir}/diagrams</agile.architecture.output.diagrams>
		<agile.architecture.output.enhancements>${agile.architecture.output.dir}/enhancements</agile.architecture.output.enhancements>

		<!-- tag::issues-url[] -->
		<!-- TODO set a valid value to have doc improvement enabled -->
		<issues.url>https://github.com/Riduidel/agile-architecture-documentation-system/issues</issues.url>
		<!-- end::issues-url[] -->

		<!-- See latest version here: https://mvnrepository.com/artifact/org.asciidoctor/asciidoctor-maven-plugin -->
		<version.asciidoctor.maven.plugin>2.1.0</version.asciidoctor.maven.plugin>
		<!-- See latest version here: https://mvnrepository.com/artifact/org.asciidoctor/asciidoctorj-pdf -->
		<version.asciidoctorj.pdf>1.5.4</version.asciidoctorj.pdf>
		<!-- See latest version here: https://mvnrepository.com/artifact/org.asciidoctor/asciidoctorj -->
		<version.asciidoctorj>2.4.3</version.asciidoctorj>
		<!-- See latest version here: https://mvnrepository.com/artifact/org.asciidoctor/asciidoctorj-revealjs -->
		<version.asciidoctor.revealjs>4.1.0</version.asciidoctor.revealjs>
		<!-- See latest version here: https://mvnrepository.com/artifact/org.asciidoctor/asciidoctorj-diagram -->
		<version.asciidoctor.kroki>0.5.0</version.asciidoctor.kroki>
		<!-- See latest version here https://mvnrepository.com/artifact/org.jruby/jruby -->
		<version.jruby>9.2.9.0</version.jruby>
		<!-- See latest version here: https://github.com/hakimel/reveal.js/releases -->
		<version.revealjs>3.9.2</version.revealjs>
	</properties>

	<issueManagement>
		<url>${issues.url}</url>
	</issueManagement>

	<!-- We need the rubygems releases to use Kroki and asciidoc-revealjs
	See https://github.com/Riduidel/agile-architecture-documentation-system/issues/159 for the weird protocol -->
	<repositories>
		<repository>
			<id>mavengems</id>
			<url>mavengem:https://rubygems.org</url>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.structurizr</groupId>
			<artifactId>structurizr-analysis</artifactId>
		</dependency>
		<dependency>
			<groupId>io.github.Riduidel.agile-architecture-documentation-system</groupId>
			<artifactId>base</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.Riduidel.agile-architecture-documentation-system</groupId>
			<artifactId>github-scm-handler</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.Riduidel.agile-architecture-documentation-system</groupId>
			<artifactId>adr-tickets-extractor</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>io.github.Riduidel.agile-architecture-documentation-system</groupId>
			<artifactId>maven-metadata-inferer</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.jboss.weld/weld-junit-parent -->
		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-junit-parent</artifactId>
			<type>pom</type>
		</dependency>
		<!-- asciidoctor-kroki is added as POM dependency to make sure gem maven 
			plugin downloads it -->
		<dependency>
			<groupId>rubygems</groupId>
			<artifactId>asciidoctor-kroki</artifactId>
			<version>${version.asciidoctor.kroki}</version>
			<type>gem</type>
			<!-- Avoid downloading gems included in AsciidoctorJ -->
			<exclusions>
				<exclusion>
					<groupId>rubygems</groupId>
					<artifactId>asciidoctor</artifactId>
				</exclusion>
				<exclusion>
					<groupId>rubygems</groupId>
					<artifactId>thread_safe</artifactId>
				</exclusion>
				<exclusion>
					<groupId>rubygems</groupId>
					<artifactId>concurrent-ruby</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.fizzed</groupId>
					<artifactId>fizzed-watcher-maven-plugin</artifactId>
					<version>1.0.6</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.6.1</version>
					<configuration>
						<release>${maven.compiler.release}</release>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.asciidoctor</groupId>
					<artifactId>asciidoctor-maven-plugin</artifactId>
					<version>${version.asciidoctor.maven.plugin}</version>
					<inherited>true</inherited>
					<dependencies>
						<dependency>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctorj-pdf</artifactId>
							<version>${version.asciidoctorj.pdf}</version>
						</dependency>
						<!-- Comment this section to use the default jruby artifact provided 
							by the plugin -->
						<dependency>
							<groupId>org.jruby</groupId>
							<artifactId>jruby-complete</artifactId>
							<version>${version.jruby}</version>
						</dependency>
						<!-- Comment this section to use the default AsciidoctorJ artifact 
							provided by the plugin -->
						<dependency>
							<groupId>org.asciidoctor</groupId>
							<artifactId>asciidoctorj</artifactId>
							<version>${version.asciidoctorj}</version>
						</dependency>
					</dependencies>
					<configuration>
						<gemPath>${project.build.directory}/gems</gemPath>
						<attributes>
							<allow-uri-read />
							<kroki-server-url>${kroki.server.url}</kroki-server-url>
						</attributes>
						<logHandler>
							<outputToConsole>true</outputToConsole>
							<failIf>
								<severity>ERROR</severity>
							</failIf>
						</logHandler>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>3.0.0-M1</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<localCheckout>true</localCheckout>
						<arguments>-Dasciidoc.documents.hide.bug.report=true</arguments>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<extensions>
			<extension>
				<!-- this allows us to download gems -->
				<groupId>org.torquebox.mojo</groupId>
				<artifactId>mavengem-wagon</artifactId>
				<version>1.0.3</version>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>${project.groupId}</groupId>
				<artifactId>aadarchi-maven-plugin</artifactId>
				<version>${project.version}</version>
				<executions>
					<execution>
						<goals><goal>generate-model</goal></goals>
					</execution>
				</executions>
				<configuration>
					<name>Test</name>
				</configuration>
			</plugin>
			<plugin>
				<groupId>de.saumya.mojo</groupId>
				<artifactId>gem-maven-plugin</artifactId>
				<version>2.0.1</version>
				<configuration>
					<jrubyVersion>${version.jruby}</jrubyVersion>
					<gemHome>${project.build.directory}/gems</gemHome>
					<gemPath>${project.build.directory}/gems</gemPath>
				</configuration>
				<executions>
					<!-- Install required gems in target directory -->
					<execution>
						<id>install-gems</id>
						<goals>
							<goal>initialize</goal>
						</goals>
						<phase>initialize</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0-M3</version>
				<executions>
					<execution>
						<id>enforce-maven</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.6</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${version.java}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>${version.java}</release>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>${agile.architecture.main.class}</mainClass>
							<systemProperties>
								<systemProperty>
									<key>maven.source.dir</key>
									<value>${project.build.sourceDirectory}</value>
								</systemProperty>
								<ystemProperty>
									<key>asciidoc.source.dir</key>
									<value>${asciidoc.source.docs.directory}</value>
								</ystemProperty>
								<systemProperty>
									<key>agile.architecture.diagrams</key>
									<value>${agile.architecture.output.diagrams}</value>
								</systemProperty>
								<systemProperty>
									<key>agile.architecture.enhancements</key>
									<value>${agile.architecture.output.enhancements}</value>
								</systemProperty>
								<systemProperty>
									<key>agile.architecture.github.token</key>
									<value>${agile.architecture.github.token}</value>
								</systemProperty>
								<systemProperty>
									<key>force</key>
									<value>${force}</value>
								</systemProperty>
							</systemProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>generate-docs</id>
			<activation>
				<file>
					<exists>${asciidoc.source.docs.directory}</exists>
				</file>
			</activation>
			<properties>
				<asciidoc.target.docs.directory>${project.build.directory}/asciidoc/docs</asciidoc.target.docs.directory>
				<asciidoc.documents.hide.bug.report>false</asciidoc.documents.hide.bug.report>
			</properties>

			<build>
				<defaultGoal>package</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${version.asciidoctor.maven.plugin}</version>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>${version.asciidoctorj.pdf}</version>
							</dependency>
							<!-- Comment this section to use the default jruby artifact provided 
								by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${version.jruby}</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact 
								provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${version.asciidoctorj}</version>
							</dependency>
						</dependencies>
						<configuration>
							<sourceHighlighter>${asciidoctor.highlighter}</sourceHighlighter>
							<preserveDirectories>true</preserveDirectories>
							<relativeBaseDir>true</relativeBaseDir>
							<requires>
								<require>asciidoctor-kroki</require>
							</requires>
							<attributes>
								<!-- Example below shows how to specify in this pom instead of System's 
									PATH, the location of dot command of Graphviz, required by PlantUML libraries -->
								<!-- Windows: <graphvizdot>C:\Program Files (x86)\Graphviz2.38\bin\dot.exe</graphvizdot> -->
								<!-- *nix : <graphvizdot>/usr/local/bin/dot</graphvizdot> -->
								<sectnums>true</sectnums>
								<project-group-id>${project.groupId}</project-group-id>
								<project-artifact-id>${project.artifactId}</project-artifact-id>
								<project-name>${project.name}</project-name>
								<project-version>${project.version}</project-version>
								<project-build-timestamp>${maven.build.timestamp}</project-build-timestamp>
								<!-- This path is relative to src/docs/asciidoc -->
								<project-pom-path>../../../pom.xml</project-pom-path>
								<!-- tag::bug-tracking-define[] -->
								<project-issues-on-github>${issues.url}</project-issues-on-github>
								<!-- end::bug-tracking-define[] -->
								<!-- These properties generate a footer with revision number and 
									date -->
								<revnumber>${project.version}</revnumber>
								<revdate>${maven.build.timestamp}</revdate>
								<organization>${project.organization.name}</organization>
								<enhancements-dir>${agile.architecture.output.enhancements}</enhancements-dir>
							</attributes>
						</configuration>
						<executions>
							<execution>
								<id>generate-html-doc</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${asciidoc.source.docs.directory}</sourceDirectory>
									<sourceHighlighter>${asciidoctor.highlighter}</sourceHighlighter>
									<backend>html5</backend>
									<outputDirectory>${asciidoc.target.docs.directory}/html</outputDirectory>
									<attributes>
										<plantumldir />
										<structurizrdir>${agile.architecture.output.diagrams}</structurizrdir>
										<imagesdir>./images</imagesdir>
										<toc>left</toc>
										<icons>font</icons>
										<sectanchors>true</sectanchors>
										<idprefix />
										<idseparator>-</idseparator>
										<hideBugReport>${asciidoc.documents.hide.bug.report}</hideBugReport>
									</attributes>
								</configuration>
							</execution>
							<!-- doesn't work in docker !!! -->
							<execution>
								<id>generate-pdf-doc</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<sourceDirectory>${asciidoc.source.docs.directory}</sourceDirectory>
									<backend>pdf</backend>
									<outputDirectory>${asciidoc.target.docs.directory}/pdf</outputDirectory>
									<sourceHighlighter>${asciidoctor.highlighter}</sourceHighlighter>
									<attributes>
										<plantumldir>${asciidoc.target.docs.directory}</plantumldir>
										<structurizrdir>${agile.architecture.output.diagrams}</structurizrdir>
										<imagesdir>./images</imagesdir>
										<icons>font</icons>
										<pagenums />
										<toc />
										<idprefix />
										<idseparator>-</idseparator>
										<hideBugReport>${asciidoc.documents.hide.bug.report}</hideBugReport>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>attach-artifact</goal>
								</goals>
								<configuration>
									<artifacts>
										<artifact>
											<file>${asciidoc.target.docs.directory}/pdf/index.pdf</file>
											<type>pdf</type>
											<classifier>documentation</classifier>
										</artifact>
									</artifacts>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- TODO: Uncomment that if you want architecture documents to be pushed 
						to GitHub releases -->
					<!-- <plugin> <groupId>de.jutzig</groupId> <artifactId>github-release-plugin</artifactId> 
						<version>1.4.0</version> <executions> <execution> <id>deploy-pdf</id> <phase>deploy</phase> 
						<goals> <goal>release</goal> </goals> <configuration> <description>New version 
						of ${project.artifactId}</description> <releaseName>${project.version}</releaseName> 
						<tag>${project.artifactId}-${project.version}</tag> <fileSets> <fileSet> 
						<directory>${asciidoc.target.docs.directory}</directory> <includes> <include>pdf/index.pdf</include> 
						</includes> </fileSet> </fileSets> </configuration> </execution> </executions> 
						</plugin> -->
				</plugins>
			</build>
		</profile>
		<profile>
			<id>generate-slides</id>
			<activation>
				<file>
					<exists>${asciidoc.source.slides.directory}</exists>
				</file>
			</activation>
			<properties>
				<asciidoc.documents.hide.bug.report>false</asciidoc.documents.hide.bug.report>
			</properties>
			<dependencies>
				<dependency>
					<groupId>rubygems</groupId>
					<artifactId>asciidoctor-revealjs</artifactId>
					<version>${version.asciidoctor.revealjs}</version>
					<type>gem</type>
					<!-- Avoid downloading gems included in AsciidoctorJ -->
					<exclusions>
						<exclusion>
							<groupId>rubygems</groupId>
							<artifactId>asciidoctor</artifactId>
						</exclusion>
						<exclusion>
							<groupId>rubygems</groupId>
							<artifactId>thread_safe</artifactId>
						</exclusion>
						<exclusion>
							<groupId>rubygems</groupId>
							<artifactId>concurrent-ruby</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
						<version>1.6.8</version>
						<executions>
							<execution>
								<id>install-revealjs</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>wget</goal>
								</goals>
								<configuration>
									<url>https://github.com/hakimel/reveal.js/archive/${version.revealjs}.zip</url>
									<unpack>true</unpack>
									<outputFileName>reveal.js-${version.revealjs}.zip</outputFileName>
									<outputDirectory>${asciidoc.target.slides.directory}</outputDirectory>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${version.asciidoctor.maven.plugin}</version>
						<dependencies>
							<!-- Comment this section to use the default jruby artifact provided 
								by the plugin -->
							<dependency>
								<groupId>org.jruby</groupId>
								<artifactId>jruby-complete</artifactId>
								<version>${version.jruby}</version>
							</dependency>
							<!-- Comment this section to use the default AsciidoctorJ artifact 
								provided by the plugin -->
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj</artifactId>
								<version>${version.asciidoctorj}</version>
							</dependency>
						</dependencies>
						<configuration>
							<preserveDirectories>true</preserveDirectories>
							<relativeBaseDir>true</relativeBaseDir>
						</configuration>
						<executions>
							<execution>
								<id>generate-slides</id>
								<phase>package</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<requires>
										<require>asciidoctor-kroki</require>
										<require>asciidoctor-revealjs</require>
									</requires>
									<sourceDirectory>${asciidoc.source.slides.directory}</sourceDirectory>
									<outputDirectory>${asciidoc.target.slides.directory}</outputDirectory>
									<backend>revealjs</backend>
									<templateDir>${project.build.directory}/asciidoctor-reveal.js-${version.asciidoctor.revealjs}/templates/slim</templateDir>
									<sourceHighlighter>${asciidoctor.highlighter}</sourceHighlighter>
									<attributes>
										<plantumldir>images/</plantumldir>
										<structurizrdir>${agile.architecture.output.diagrams}</structurizrdir>
										<imagesdir>.</imagesdir>
										<!-- As we are downloading reveal.js in runtime, it sits in a nonstandard 
											folder `reveal.js-${version.revealjs}` -->
										<revealjsdir>reveal.js-${version.revealjs}</revealjsdir>
										<!-- put here the reveal.js specific attributes -->
										<sourcedir>${basedir}/src/main/java</sourcedir>
										<revealjs_theme>solarized</revealjs_theme>
										<project-group-id>${project.groupId}</project-group-id>
										<project-artifact-id>${project.artifactId}</project-artifact-id>
										<project-name>${project.name}</project-name>
										<project-version>${project.version}</project-version>
										<project-build-timestamp>${maven.build.timestamp}</project-build-timestamp>
										<!-- These properties generate a footer with revision number and 
											date -->
										<revnumber>${project.version}</revnumber>
										<revdate>${maven.build.timestamp}</revdate>
										<stylesheet />
										<hideBugReport>${asciidoc.documents.hide.bug.report}</hideBugReport>
									</attributes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- This profile should be invoked at the process-resources phase to 
				correctly trigger the remaining ones ! -->
			<id>livereload</id>
			<dependencies>
				<dependency>
					<groupId>net.alchim31</groupId>
					<artifactId>livereload-jvm</artifactId>
					<version>0.2.0</version>
				</dependency>
			</dependencies>
			<build>
				<defaultGoal>package</defaultGoal>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<phase>package</phase>
								<id>start-livereload-server in background</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<!-- Livereload is launched as an exec job to allow it to run in 
										background -->
									<executable>java</executable>
									<!-- See https://github.com/davidB/livereload-jvm/blob/0.2.0/src/main/java/net_alchim31_livereload/Main.java 
										for details -->
									<arguments>
										<argument>-classpath</argument>
										<classpath>
											<dependency>net.alchim31:livereload-jvm</dependency>
											<dependency>org.eclipse.jetty:jetty-util</dependency>
											<dependency>org.eclipse.jetty:jetty-io</dependency>
											<dependency>org.eclipse.jetty.orbit:javax.servlet:jar</dependency>
											<dependency>org.eclipse.jetty:jetty-continuation</dependency>
											<dependency>org.eclipse.jetty:jetty-server</dependency>
											<dependency>org.eclipse.jetty.orbit:javax.servlet</dependency>
											<dependency>org.eclipse.jetty:jetty-http</dependency>
											<dependency>com.googlecode.json-simple:json-simple</dependency>
											<dependency>org.eclipse.jetty:jetty-websocket</dependency>
										</classpath>
										<argument>net_alchim31_livereload.Main</argument>
										<argument>-d</argument>
										<argument>${asciidoc.target.base.directory}</argument>
									</arguments>
									<async>true</async>
									<asyncDestroyOnShutdown>true</asyncDestroyOnShutdown>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.fizzed</groupId>
						<artifactId>fizzed-watcher-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>watch source</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<touchFile>target/watcher.touchfile</touchFile>
									<watches>
										<watch>
											<directory>${project.basedir}/src/main/java</directory>
										</watch>
										<watch>
											<directory>${asciidoc.source.docs.directory}</directory>
										</watch>
										<watch>
											<directory>${asciidoc.source.slides.directory}</directory>
										</watch>
									</watches>
									<goals>
										<goal>prepare-package</goal>
										<goal>org.asciidoctor:asciidoctor-maven-plugin:process-asciidoc@generate-slides</goal>
										<goal>org.asciidoctor:asciidoctor-maven-plugin:process-asciidoc@generate-html-doc</goal>
									</goals>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>